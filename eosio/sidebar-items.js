initSidebarItems({"enum":[["AssetDivOpError","TODO docs"],["AssetOpError","TODO docs"],["ParseAssetError","TODO docs"],["ParseNameError","An error which can be returned when parsing an EOSIO name."],["ParseSymbolError","An error which can be returned when parsing an EOSIO symbol."],["ReadError","Error that can be returned when reading bytes."],["WriteError","Error that can be returned when writing bytes."]],"fn":[["active_producers","Gets the top 21 producers"],["assert_ripemd160",""],["assert_sha1",""],["assert_sha256",""],["assert_sha512",""],["bool_from_u8","TODO docs"],["bool_to_u8","TODO docs"],["check","Aborts processing of this action and unwinds all pending changes if the test condition is true"],["check_code","Aborts processing of this action and unwinds all pending changes if the test condition is true"],["creation_time","Returns the creation time of an account"],["current_receiver","Get the current receiver of the action."],["current_time","Gets the current time"],["eosio_exit","This method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called."],["expiration","Gets the expiration time"],["f64_from_string","TODO docs"],["get_resource_limits","Priviledged"],["has_auth","Verifies that `name` name has auth."],["is_account","Verifies that `name` is an account."],["is_privileged","Check if an account is privileged"],["permission_last_used","Returns the last used time of a permission"],["publication","Gets the publication time"],["require_auth","Verifies that `name` exists in the set of provided auths on a action. Throws if not found."],["require_permission","Verifies that `name` exists in the set of provided auths on a action. Throws if not found."],["require_recipient","Add the specified account to set of accounts to be notified"],["ripemd160",""],["send_context_free_inline_action",""],["send_inline_action",""],["sha1",""],["sha256",""],["sha512",""],["u64_from_string","TODO docs"]],"macro":[["n","Macro for converting EOSIO names into `u64` representations at compile time."],["print",""],["s","Macro for converting EOSIO symbols into `u64` representations at compile time."]],"struct":[["AccountName","TODO docs"],["Action","TODO docs"],["ActionName","TODO docs"],["Asset","TODO docs"],["Authorization","A permission"],["BlockTimestamp","Block timestamp as milliseconds relative to the year 2000."],["Checksum160","TODO docs"],["Checksum256","TODO docs"],["Checksum512","TODO docs"],["CpuWeight","CPU Weight"],["DeferredTransactionId","TODO docs"],["ExtendedAsset","TODO docs"],["ExtendedSymbol","TODO docs"],["Name","TODO docs"],["NetWeight","Net Weight"],["PermissionName","TODO docs"],["PrimaryTableCursor",""],["PrimaryTableIndex",""],["PrimaryTableIterator",""],["PublicKey","TODO docs"],["RamBytes","RAM in bytes"],["ScopeName","TODO docs"],["SecondaryTableCursor",""],["SecondaryTableIndex",""],["SecondaryTableIterator",""],["SecondaryTableName",""],["Symbol","TODO docs"],["SymbolCode","TODO docs"],["TableName","TODO docs"],["TimePoint","Time relative to unix epoch"],["TimePointSec","Time relative to unix epoch"]],"trait":[["ActionFn",""],["CheckedAdd","TODO docs"],["CheckedDiv","TODO docs"],["CheckedMul","TODO docs"],["CheckedRem","TODO docs"],["CheckedSub","TODO docs"],["NumBytes","Count the number of bytes a type is expected to use."],["Print",""],["Read","Read bytes."],["SecondaryTableKey",""],["TableCursor","Table Cursor"],["TableIndex","Table index"],["TableIterator","Table iterator"],["TableRow",""],["ToAction","TODO docs"],["Write","Write bytes."]]});